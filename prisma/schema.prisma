// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String
  email     String      @unique
  password  String
  plan      TxPlan      @default(FREE)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  portfolio Portfolio[]
}

enum TxPlan {
  FREE
  PRO
}

model Portfolio {
  id           String        @id @default(uuid())
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  cryptoId     String // ID da criptomoeda (ex: "bitcoin", "ethereum")
  symbol       String // Símbolo da criptomoeda (ex: "BTC", "ETH")
  name         String // Nome da criptomoeda
  quantity     Float // Quantidade total atual
  transactions Transaction[] // Relacionamento com as transações
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@unique([userId, cryptoId])
}

model Transaction {
  id          String    @id @default(uuid())
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  type        TxType // Tipo da transação (COMPRA/VENDA)
  quantity    Float // Quantidade comprada ou vendida
  price       Float // Preço unitário na transação
  totalAmount Float // Valor total da transação (quantidade * preço)
  date        DateTime  @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum TxType {
  COMPRA
  VENDA
}
